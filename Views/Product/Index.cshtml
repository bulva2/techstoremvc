@using TechStoreMVC.Models.Product
@model ProductToBasketModel
@{
	ViewBag.Title = "Products";
	List<string> brands = ViewBag.Brands;

	string ascChecked = string.Empty;
	string descChecked = "checked";
}

<div class="d-flex justify-content-between align-items-center">
    <div class="flex-grow-1 text-center">
        @if ((Model.CategoryName!).Length > 0)
        {
            <h1>@Model.CategoryName</h1>
        }
        else
        {
            <h1>All Products</h1>
        }
    </div>
	<div>
		<form asp-action="Index" method="get" class="d-flex gap-2">
			<input type="text" name="search" class="form-control">
			<button type="submit" class="btn btn-primary">Search</button>
		</form>
	</div>
</div>






@if (TempData["Message"] != null)
{
	<div class="alert alert-@TempData["MessageType"]" role="alert">
		@TempData["Message"]
	</div>
}

<div class="container-fluid">
	<div class="row">
		<div class="col-2 d-flex flex-column gap-3">
			<form asp-action="Index" method="get">
				<h6 class="text-center">Price</h6>

				@* Here I'm getting the previously selected price sorting *@
				@if (Context.Request.Query.ContainsKey("way"))
				{
					string wayText = Context.Request.Query["way"].ToString();
					descChecked = (wayText == "desc") ? "checked" : string.Empty;
					ascChecked = (wayText == "asc") ? "checked" : string.Empty;
				}

				@* Ascending or Descending *@
				<div class="btn-group" role="group">
					<input type="radio" class="btn-check" name="way" id="btnradio1" value="desc" autocomplete="off" @descChecked>
					<label class="btn btn-outline-primary" for="btnradio1">From the most expensive</label>

					<input type="radio" class="btn-check" name="way" id="btnradio2" value="asc" autocomplete="off" @ascChecked>
					<label class="btn btn-outline-primary" for="btnradio2">From the least expensive</label>
				</div>

				<input type="hidden" value="@Model.CategoryName" name="categoryName" />
				<h6 class="text-center mt-2">Brands</h6>
				<div class="d-flex flex-column gap-2">
					@for (int i = 0; i < brands.Count; i++)
					{
						string isChecked = Context.Request.Query["brands"].Contains(brands[i]) ? "checked" : string.Empty;

						<input type="checkbox" class="btn-check" id="btncheck@(i)" name="brands" value="@brands[i]" autocomplete="off" @isChecked>
						<label class="btn btn-outline-primary" for="btncheck@(i)">@brands[i]</label>
					}

					<button type="submit" class="btn btn-sm btn-success">Apply Filters</button>
				</div>
			</form>
		</div>
		<div class="col-10">
			<table class="table text-center">
				<thead>
					<tr>
						@if (ViewBag.Role == "admin")
						{
							<th scope="col">#</th>
						}
						<th></th>
						<th scope="col">Brand</th>
						<th scope="col">Model</th>
						<th scope="col">Price</th>
						<th></th>
						<th scope="col">Add to basket</th>
					</tr>
				</thead>
				<tbody>
					@foreach (ProductViewModel p in ViewBag.ProductViewModels)
					{
						<tr class="align-middle">
							@if (ViewBag.Role == "admin")
							{
								<td>@p.Id</td>
							}
							<td>
								<img src="~/img/products/@(p.Id).png" alt="Missing Product image" width="100" height="100">
							</td>
							<td class="e">@p.Brand</td>
							<td>@p.Model</td>
							<td>@p.PriceText</td>
							<td><a asp-action="Details" asp-controller="Product" asp-route-id="@p.Id" class="btn btn-secondary">Product Details</a></td>
							<td>
								<form asp-action="AddProductToBasket" asp-controller="Basket">
									<input type="hidden" asp-for="Id" value="@p.Id">
									<input asp-for="Quantity" type="number" min="1" max="10" value="1">
									<button type="submit" class="btn btn-light">Add to basket</button>
								</form>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
</div>

